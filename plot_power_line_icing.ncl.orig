;*************************************************
; raster_3.ncl
;************************************************
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"   
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"   
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/wrf/WRFUserARW.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/wrf/WRF_contributed.ncl"

begin
  ; ==== level for power line ========
  ztower = 300 ; meters
  ;
  ; ======== number of stations for met tower =======
  num_mt = 2

  ff = addfile(file_in,"r")
  setfileoption("bin","WriteByteOrder","LittleEndian")

  xlat      = ff->XLAT
  xlon      = ff->XLONG
  hgt       = ff->HGT

  phb = ff->PHB
  ph  = ff->PH
  pht = phb+ph

  ; ==============
  tlat1     = ff@TRUELAT1
  tlat2     = ff@TRUELAT2
  clat      = ff@MOAD_CEN_LAT
  clon      = ff@STAND_LON

  ; ===============
  dsizes_pht = dimsizes(pht)
  n_z = dsizes_pht(1)
  n_y = dsizes_pht(2)
  n_x = dsizes_pht(3)

  print(n_x)
  print(n_y)

  ; ==== find index of tower level ========
  i_ext = 2
  j_ext = 2

  do k=0,n_z-1
   pht(0,k,j_ext,i_ext)=pht(0,k,j_ext,i_ext)/9.8-hgt(0,j_ext,i_ext)
  end do

  iz = 5
  diff_ztower = 1000000.

  do k=0,n_z-1
   if (abs(pht(0,k,j_ext,i_ext)-ztower) .lt. diff_ztower) then
    iz = k
    diff_ztower = abs(pht(0,k,j_ext,i_ext)-ztower)
   end if
  end do

  print(iz)
  ; =========
  it = 0
  tc = wrf_user_getvar(ff,"tc",it)
  pres = wrf_user_getvar(ff,"pres",it)  ; pressure in Pa
  ua   = wrf_user_getvar(ff,"ua",it)
  va   = wrf_user_getvar(ff,"va",it)

  qcloud = ff->QCLOUD
  qrain  = ff->QRAIN

  ; ==============
  qliq = qcloud + qrain
  density_air = pres/(287*(tc+273.16))
  speed_a = sqrt(ua*ua + va*va)

  ; ======
  ice_thick = hgt
  ice_thick = 0

  ; ========
  ice_thick@description = "icing growth rate"
  ice_thick@units       = "mm/h"

  ; =====
  ; parameters 
  MVD = 18e-6    ; mean volume diameter (m)
  rho_w = 1000   ; water density (kg/m**3)
  rho_i = 900    ; ice density (kg/m**3)
  d_c = 6.2e-3   ; cylinder diameter (m)
  freezing_fraction = 1
 
  Rtmp0 = 518.7

  ; ==========
  ql2d = hgt
  ql2d = 0

  ;iz = 5
  do j=0,n_y-1
   do i=0,n_x-1
    if (tc(iz,j,i) .le. 0.) then
     ql2d(0,j,i)=qliq(0,iz,j,i)*1000

     Rtmp = (tc(iz,j,i) + 273.15)*(9./5.)
     mu_a = ( (3.62e-7)*4.44822/(0.3048000^2) ) * (Rtmp/Rtmp0)^1.5 * (Rtmp0+198.72)/(Rtmp0+198.72)  ; Pa s
     St = (speed_a(iz,j,i)* MVD^2 * rho_w)/(9* mu_a* d_c)
     E  = St^2 /(St+0.7)^2

     ice_thick(0,j,i) = 3600*1000* E*qliq(0,iz,j,i)*density_air(iz,j,i)*speed_a(iz,j,i)*freezing_fraction/rho_i

    end if
   end do
  end do

  ; ==========
  hgt@lat2d = xlat(0,:,:)
  hgt@lon2d = xlon(0,:,:)

  ice_thick@lat2d = xlat(0,:,:)
  ice_thick@lon2d = xlon(0,:,:)

  ; ====== get coordinate of power lines ======
  stn_file = "line_latlon_all.txt"

  ncol = 3
  data = readAsciiTable(stn_file, ncol, "float", 0)

  lat = (/data(:,0)/)
  lon = (/data(:,1)/)
  pwv = (/data(:,2)/)

  delete(data)

  ; ========
  res           = True

  res@MAP_PROJ  = ff@MAP_PROJ
  res@TRUELAT1  = ff@TRUELAT1
  res@TRUELAT2  = ff@TRUELAT2
  res@STAND_LON = ff@STAND_LON
  res@DX        = ff@DX
  res@DY        = ff@DY

  res@REF_LAT = xlat(0,0,0)
  res@REF_LON = xlon(0,0,0)
  res@KNOWNI  = 1.0
  res@KNOWNJ  = 1.0

  ; =========
  np_search = 5
  alpha = 7

  nstn = dimsizes(pwv)

  print(nstn)

  do i=0,nstn-1
   loc1 = wrf_ll_to_ij ( lon(i), lat(i), res )
   i1=floattoint(loc1(0))-1
   j1=floattoint(loc1(1))-1
   
   limx1 = -np_search + i1
   limx2 = i1 + np_search

   limy1 = -np_search + j1
   limy2 = j1 + np_search

   if (limx1 .le. 0) then
    limx1 = 0
   end if

   if (limx1 .ge. n_x-1) then
    limx1 = n_x-1
   end if

   if (limx2 .le. 0) then
    limx2 = 0  
   end if

   if (limx2 .ge. n_x-1) then
    limx2 = n_x-1
   end if

   if (limy1 .le. 0) then
    limy1 = 0
   end if

   if (limy1 .ge. n_y-1) then
    limy1 = n_y-1
   end if

   if (limy2 .le. 0) then
    limy2 = 0
   end if

   if (limy2 .ge. n_y-1) then
    limy2 = n_y-1
   end if


   if ( (i1 .ge. 0) .and. (i1 .le. (n_x-1)) .and. \
        (j1 .ge. 0) .and. (j1 .le. (n_y-1)) ) then

    weight = 0.
    pwv(i) = 0.

    do jj=limy1,limy2
     do ii=limx1,limx2
      dist = sqrt( (ii-i1)^2 + (jj-j1)^2 )
      weight = weight + exp(-dist^2 / alpha)
      pwv(i) = pwv(i) + exp(-dist^2 / alpha)*ice_thick(0,jj,ii)
     end do
    end do

    pwv(i) = pwv(i)/weight

   end if
  
  end do

; ======= plot map ===========
  wks = gsn_open_wks("pdf","raster")

  gsn_define_colormap(wks,"gsltod")
  setvalues wks
    "wkColorMap"        : "gsltod"
    "wkForegroundColor" : (/0.,0.,0./)
    "wkBackgroundColor" : (/1.,1.,1./)
  end setvalues

  ;gsn_define_colormap(wks,"hlu_default")
  ;gsn_merge_colormaps(wks,"hlu_default","gsltod")

  ; ==== WC: define my own colors ========
  cmap = RGBtoCmap("color_ybl_precip.txt")
  gsn_define_colormap(wks,cmap)
  gsn_merge_colormaps(wks,cmap,"gsltod")

  res                             = True
  res@gsnDraw                     = False
  res@gsnFrame                    = False
  res@gsnMaximize                 = True

  res@gsnSpreadColors             = True
  res@gsnSpreadColorStart         = 32
  res@gsnSpreadColorEnd           = 62
  res@pmTickMarkDisplayMode       = "Always"

  res@cnLevelSelectionMode        = "ManualLevels"
  res@cnMinLevelValF              = 0
  res@cnMaxLevelValF              = 7000
  res@cnLevelSpacingF             = 1000

  res@gsnLeftString             =""
  res@gsnRightString             =""

  ;res@cnFillOn                    = True
  ;res@cnLinesOn                   = False
  res@cnFillOn                    = False
  res@cnLinesOn                   = True
  res@cnLineLabelsOn              = False

  res@lbLabelStride               = 20
  res@lbBoxLinesOn                = False
  res@lbLabelStride  = 3

  res@mpProjection                = "LambertConformal"
  res@mpLambertParallel1F         = tlat1
  res@mpLambertParallel2F         = tlat2
  res@mpLambertMeridianF          = clon

  res@mpLimitMode                 = "Corners"
  res@mpLeftCornerLatF            = xlat(0,0,0)
  res@mpLeftCornerLonF            = xlon(0,0,0)
  res@mpRightCornerLatF           = xlat(0,n_y-1,n_x-1)
  res@mpRightCornerLonF           = xlon(0,n_y-1,n_x-1)

  ;res@mpLeftCornerLatF            = xlat1
  ;res@mpLeftCornerLonF            = xlon1
  ;res@mpRightCornerLatF           = xlat2
  ;res@mpRightCornerLonF           = xlon2

  res@mpFillOn                    = False
  ;res@mpOutlineDrawOrder          = "PostDraw"
  res@mpFillDrawOrder             = "PreDraw"
  ;res@mpOutlineBoundarySets       = "GeophysicalAndUSStates"
  res@mpOutlineBoundarySets       = "National"
  res@mpUSStateLineColor          = "Gray10"
  res@mpUSStateLineDashPattern    = 2
  res@mpOutlineSpecifiers = (/"China:states"/)
  res@mpDataBaseVersion     = "MediumRes"
  res@mpDataSetName = "Earth..4"

  res@mpGridLineDashPattern  = 2
  res@pmTickMarkDisplayMode  = "Always"

  res@tiMainString           = title
  res@tiMainFontHeightF      = 0.020              ; smaller title

  res@gsnAddCyclic           = False

  res@tfDoNDCOverlay = True

  map = gsn_csm_contour_map(wks,hgt(0,:,:),res)

; ========= now do the dots =========
; added by WC: 2009-02-13
; 1:   white
; 12:  purple
; 6:   (light) blue
; 3:   green
; 5:   yellow
; 2:   red
; 18:  magenta
; 13:  orange
;
;
; ===== use
; 6: light blue
; 4: blue
; 16: purple
; 3: green
; 2: red
;
;-------Options--------

  ;arr = (/0.,2.,4.,6.,8.,10.,12.,14.,16.,18.,20.,22./)    ; bin settings (bin0 = < 0.,

  ;colors = (/0,0,2,3,4,5,6,7,8,10,12,13,19/)  ; bin1 = 0.:4.999, etc.)

  arr = (/0., 0.001, 0.5, 1.0, 2.6, 5.1/)    ; bin settings (bin0 = < 0.,
  ; ======== YBL colors =======
  colors = (/0,0,4,6,8,10,12/)  ; bin1 = 0.:4.999, etc.)

  ; ==== original colors ========
  ;colors = (/0,0,6,4,16,3,2/)  ; bin1 = 0.:4.999, etc.)
  ;colors = (/0,0,2,3,4,5,6/)  ; bin1 = 0.:4.999, etc.)

 
  labels = new(dimsizes(arr)+1,string)  ; Labels for legend.

  num_distinct_markers = dimsizes(arr)+1        ; number of distinct markers
  lat_new = new((/num_distinct_markers,dimsizes(pwv)/),float,-999)
  lon_new = new((/num_distinct_markers,dimsizes(pwv)/),float,-999)

   do i = 0, num_distinct_markers-1
    if (i.eq.0) then
      indexes = ind(pwv.lt.arr(0))
      labels(i) = "x < " + arr(0)
    end if
    if (i.eq.num_distinct_markers-1) then
      indexes = ind(pwv.ge.max(arr))
      labels(i) = "wspd >= " + max(arr)
    end if
    if (i.gt.0.and.i.lt.num_distinct_markers-1) then
      indexes = ind(pwv.ge.arr(i-1).and.pwv.lt.arr(i))
      labels(i) = arr(i-1) + " <= x < " + arr(i)
    end if

;
; Now that we have the set of indexes whose values fall within
; the given range, take the corresponding lat/lon values and store
; them, so later we can color this set of markers with the appropriate
; color.
;
    if (.not.any(ismissing(indexes))) then
      npts_range = dimsizes(indexes)   ; # of points in this range.
      lat_new(i,0:npts_range-1) = lat(indexes)
      lon_new(i,0:npts_range-1) = lon(indexes)
    end if
    delete(indexes)            ; Necessary b/c "indexes" may be a different
                               ; size next time.
  end do

;
;  Create logical variables to hold the marker and text resources.
;  These markers are different than the XY markers, because they are not
;  associated with an XY plot. You can put these markers on any plot.
;
  gsres               = True
  gsres@gsMarkerIndex = 16          ; Use filled dots for markers.
  ;gsres@gsMarkerIndex =  4           ; hole in the middle

  txres               = True
  txres@txFontHeightF = 0.015

;
; Loop through each grouping of markers, and draw them one set at
; a time, assigning the proper color and size with gsn_marker.
;
; At the same time, draw a legend showing the meaning of the markers.
;
  ;xleg = (/-0.05,0.00,0.00,0.09,0.09,0.28,0.28,0.48,0.48,0.68,0.68,0.88,0.88/)   ; Location of
  ;xtxt = (/-0.14,0.09,0.00,0.18,0.18,0.37,0.37,0.57,0.57,0.78,0.78,0.98,0.98/)   ; legend markers
  ;yleg = (/-0.05,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01/)   ; and text
  ;ytxt = (/-0.05,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01,0.05,0.01/)   ; strings.

  xleg = (/ 0.09,0.09,0.28,0.28,0.48,0.48,0.68/)   ; Location of
  xtxt = (/ 0.18,0.18,0.37,0.37,0.57,0.57,0.78/)   ; legend markers
  yleg = (/ 0.05,0.01,0.05,0.01,0.05,0.01,0.05/)   ; and text
  ytxt = (/ 0.05,0.01,0.05,0.01,0.05,0.01,0.05/)   ; strings.

point = new(num_distinct_markers,graphic)

  do i = 0, num_distinct_markers-1
    if (.not.ismissing(lat_new(i,0)))
      gsres@gsMarkerColor      = colors(i)
      ;gsres@gsMarkerColor      = 1
      ;gsres@gsMarkerThicknessF = 0.7*(i+1)
      ;gsres@gsMarkerThicknessF = 2
      gsres@gsMarkerThicknessF = 1
      ;gsres@MarkerSizeF  = 0.4
      gsres@MarkerSizeF  = 0.05

      point(i) =  gsn_add_polymarker(wks,map,lon_new(i,:),lat_new(i,:),gsres)

; Add marker and text for the legend.

      gsn_polymarker_ndc(wks,          xleg(i),yleg(i),gsres)
      gsn_text_ndc      (wks,labels(i),xtxt(i),ytxt(i),txres)
    end if
   end do
  draw(map)

; =================================
;  Draw an array of vertical wind barbs over the above map.
;
  lat_w = new((/num_mt/),float)
  lon_w = new((/num_mt/),float)
  u_w   = new((/num_mt/),float)
  v_w   = new((/num_mt/),float)

  ;lat_w(0) = 40.95413
  ;lat_w(1) = 40.91255

  ; --- trick it not to plot
  lat_w(0) = -89.95413
  lat_w(1) = -89.91255

  lon_w(0) = -104.07798
  lon_w(1) = -103.89477

  u_w(:) =  5.
  ;u_w(:) =  0.
  v_w(:) =  0.

  wmsetp("col", 2)
  wmsetp("wbs", .1)
  wmbarbmap(wks, lat_w, lon_w,  u_w, v_w)  ; Plot barbs.

; -----------------------------------------

  frame(wks)   ; Now advance the frame.
  end
              
